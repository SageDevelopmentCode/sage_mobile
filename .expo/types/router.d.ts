/* eslint-disable */
import * as Router from 'expo-router';

export * from 'expo-router';

declare module 'expo-router' {
  export namespace ExpoRouter {
    export interface __routes<T extends string = string> extends Record<string, unknown> {
      StaticRoutes: `/` | `/(authed)` | `/(authed)/` | `/(authed)/(daily)` | `/(authed)/(daily)/` | `/(authed)/(home)` | `/(authed)/(home)/` | `/(authed)/(profile)` | `/(authed)/(profile)/` | `/(authed)/(tabs)` | `/(authed)/(tabs)/` | `/(authed)/(tabs)/(daily)` | `/(authed)/(tabs)/(daily)/` | `/(authed)/(tabs)/(home)` | `/(authed)/(tabs)/(home)/` | `/(authed)/(tabs)/(profile)` | `/(authed)/(tabs)/(profile)/` | `/(daily)` | `/(daily)/` | `/(home)` | `/(home)/` | `/(profile)` | `/(profile)/` | `/(tabs)` | `/(tabs)/` | `/(tabs)/(daily)` | `/(tabs)/(daily)/` | `/(tabs)/(home)` | `/(tabs)/(home)/` | `/(tabs)/(profile)` | `/(tabs)/(profile)/` | `/_sitemap` | `/login`;
      DynamicRoutes: `/(authed)/(daily)/passage/${Router.SingleRoutePart<T>}` | `/(authed)/(daily)/quote/${Router.SingleRoutePart<T>}` | `/(authed)/(daily)/verse/${Router.SingleRoutePart<T>}` | `/(authed)/(daily)/word/${Router.SingleRoutePart<T>}` | `/(authed)/(home)/journey/${Router.SingleRoutePart<T>}` | `/(authed)/(tabs)/(daily)/passage/${Router.SingleRoutePart<T>}` | `/(authed)/(tabs)/(daily)/quote/${Router.SingleRoutePart<T>}` | `/(authed)/(tabs)/(daily)/verse/${Router.SingleRoutePart<T>}` | `/(authed)/(tabs)/(daily)/word/${Router.SingleRoutePart<T>}` | `/(authed)/(tabs)/(home)/journey/${Router.SingleRoutePart<T>}` | `/(authed)/(tabs)/journey/${Router.SingleRoutePart<T>}` | `/(authed)/(tabs)/passage/${Router.SingleRoutePart<T>}` | `/(authed)/(tabs)/quote/${Router.SingleRoutePart<T>}` | `/(authed)/(tabs)/verse/${Router.SingleRoutePart<T>}` | `/(authed)/(tabs)/word/${Router.SingleRoutePart<T>}` | `/(authed)/journey/${Router.SingleRoutePart<T>}` | `/(authed)/passage/${Router.SingleRoutePart<T>}` | `/(authed)/quote/${Router.SingleRoutePart<T>}` | `/(authed)/verse/${Router.SingleRoutePart<T>}` | `/(authed)/word/${Router.SingleRoutePart<T>}` | `/(daily)/passage/${Router.SingleRoutePart<T>}` | `/(daily)/quote/${Router.SingleRoutePart<T>}` | `/(daily)/verse/${Router.SingleRoutePart<T>}` | `/(daily)/word/${Router.SingleRoutePart<T>}` | `/(home)/journey/${Router.SingleRoutePart<T>}` | `/(tabs)/(daily)/passage/${Router.SingleRoutePart<T>}` | `/(tabs)/(daily)/quote/${Router.SingleRoutePart<T>}` | `/(tabs)/(daily)/verse/${Router.SingleRoutePart<T>}` | `/(tabs)/(daily)/word/${Router.SingleRoutePart<T>}` | `/(tabs)/(home)/journey/${Router.SingleRoutePart<T>}` | `/(tabs)/journey/${Router.SingleRoutePart<T>}` | `/(tabs)/passage/${Router.SingleRoutePart<T>}` | `/(tabs)/quote/${Router.SingleRoutePart<T>}` | `/(tabs)/verse/${Router.SingleRoutePart<T>}` | `/(tabs)/word/${Router.SingleRoutePart<T>}` | `/journey/${Router.SingleRoutePart<T>}` | `/passage/${Router.SingleRoutePart<T>}` | `/quote/${Router.SingleRoutePart<T>}` | `/verse/${Router.SingleRoutePart<T>}` | `/word/${Router.SingleRoutePart<T>}`;
      DynamicRouteTemplate: `/(authed)/(daily)/passage/[id]` | `/(authed)/(daily)/quote/[id]` | `/(authed)/(daily)/verse/[id]` | `/(authed)/(daily)/word/[id]` | `/(authed)/(home)/journey/[id]` | `/(authed)/(tabs)/(daily)/passage/[id]` | `/(authed)/(tabs)/(daily)/quote/[id]` | `/(authed)/(tabs)/(daily)/verse/[id]` | `/(authed)/(tabs)/(daily)/word/[id]` | `/(authed)/(tabs)/(home)/journey/[id]` | `/(authed)/(tabs)/journey/[id]` | `/(authed)/(tabs)/passage/[id]` | `/(authed)/(tabs)/quote/[id]` | `/(authed)/(tabs)/verse/[id]` | `/(authed)/(tabs)/word/[id]` | `/(authed)/journey/[id]` | `/(authed)/passage/[id]` | `/(authed)/quote/[id]` | `/(authed)/verse/[id]` | `/(authed)/word/[id]` | `/(daily)/passage/[id]` | `/(daily)/quote/[id]` | `/(daily)/verse/[id]` | `/(daily)/word/[id]` | `/(home)/journey/[id]` | `/(tabs)/(daily)/passage/[id]` | `/(tabs)/(daily)/quote/[id]` | `/(tabs)/(daily)/verse/[id]` | `/(tabs)/(daily)/word/[id]` | `/(tabs)/(home)/journey/[id]` | `/(tabs)/journey/[id]` | `/(tabs)/passage/[id]` | `/(tabs)/quote/[id]` | `/(tabs)/verse/[id]` | `/(tabs)/word/[id]` | `/journey/[id]` | `/passage/[id]` | `/quote/[id]` | `/verse/[id]` | `/word/[id]`;
    }
  }
}
